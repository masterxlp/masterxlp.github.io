I"@@<ul id="markdown-toc">
  <li><a href="#寻找两个正序数组的中位数" id="markdown-toc-寻找两个正序数组的中位数">寻找两个正序数组的中位数</a>    <ul>
      <li><a href="#题目描述" id="markdown-toc-题目描述">题目描述</a></li>
      <li><a href="#示例" id="markdown-toc-示例">示例</a></li>
      <li><a href="#我的解题思路及代码" id="markdown-toc-我的解题思路及代码">我的解题思路及代码</a></li>
    </ul>
  </li>
</ul>

<h2 id="寻找两个正序数组的中位数">寻找两个正序数组的中位数</h2>
<h3 id="题目描述">题目描述</h3>
<p>给定两个大小为 m 和 n 的正序数组 nums1 和 nums2。
请找出这两个正序数组的中位数，并且要求算法的时间复杂度为 $O(log(m+n))$。
假设 nums1 和 nums2 不会同时为空。</p>

<h3 id="示例">示例</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// 示例1

nums1 = [1,3]
nums2 = [2]

则中位数是 2.0

// 示例2

nums1 = [1,2]
nums2 = [3,4]

则中位数是 (2 + 3) / 2 = 2.5
</code></pre></div></div>

<h3 id="我的解题思路及代码">我的解题思路及代码</h3>
<p>首先，能最快想到的就是暴力法，即对数组中的所有值进行重新排序，然后取中位数，但是该方法的时间复杂度最差时为 $O(mn)$，不满足题目中的时间复杂度的要求。
但是，只是为了寻找中位数，因此，不必进行完全排序，只需进行 $\frac{m+n}{2}$ 次的排序即可。</p>

<p>又注意到，假设 nums1 和 nums2 不会同时为空，因此，必然存在一种情况那就是，nums1 和 nums2 其中一个为空的情况，且 num1 和 num2 本身是有序的。
因此，第一种情况是：num1 和 num2 有一个为空，这时寻找中位数其实就是不为空的那个数组的中间值，时间复杂度为 $O(1)$。
第二种情况是：num1 和 num2 均不为空，这时我们最差只需要寻找 $\frac{m+n}{2}$ 次即可找到。
具体见代码。</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">findMedianSortedArrays</span><span class="p">(</span><span class="n">nums1</span><span class="p">,</span> <span class="n">nums2</span><span class="p">):</span>
    <span class="n">nums1_len</span> <span class="o">=</span> <span class="n">len</span><span class="p">(</span><span class="n">nums1</span><span class="p">)</span>
    <span class="n">nums2_len</span> <span class="o">=</span> <span class="n">len</span><span class="p">(</span><span class="n">nums2</span><span class="p">)</span>
    
    <span class="n">length</span> <span class="o">=</span> <span class="n">nums1_len</span> <span class="o">+</span> <span class="n">nums2_len</span>
    
    <span class="k">if</span> <span class="n">length</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">index</span> <span class="o">=</span> <span class="n">int</span><span class="p">(</span><span class="n">length</span> <span class="sr">//</span> <span class="mi">2</span><span class="p">)</span>
    <span class="ss">else:
        </span><span class="n">index</span> <span class="o">=</span> <span class="p">(</span><span class="n">int</span><span class="p">(</span><span class="n">length</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">int</span><span class="p">(</span><span class="n">length</span> <span class="o">/</span> <span class="mi">2</span><span class="p">))</span>
    
    <span class="c1"># Case 1. nums1 和 nums2 有一个为空</span>
    <span class="k">if</span> <span class="n">nums1_len</span> <span class="o">==</span> <span class="mi">0</span> <span class="n">or</span> <span class="n">nums2_len</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">nums</span> <span class="o">=</span> <span class="n">nums1</span> <span class="k">if</span> <span class="n">nums2_len</span> <span class="o">==</span> <span class="mi">0</span> <span class="k">else</span> <span class="n">nums2</span>
        <span class="k">if</span> <span class="n">type</span><span class="p">(</span><span class="n">index</span><span class="p">)</span> <span class="n">is</span> <span class="ss">int:
            </span><span class="k">return</span> <span class="n">float</span><span class="p">(</span><span class="n">nums</span><span class="p">[</span><span class="n">index</span><span class="p">])</span>
        <span class="ss">else:
            </span><span class="k">return</span> <span class="n">float</span><span class="p">((</span><span class="n">nums</span><span class="p">[</span><span class="n">index</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span> <span class="o">+</span> <span class="n">nums</span><span class="p">[</span><span class="n">index</span><span class="p">[</span><span class="mi">1</span><span class="p">]])</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
    <span class="c1"># Case 2. nums1 和 nums2 均为空</span>
    <span class="n">elif</span> <span class="n">nums1_len</span> <span class="o">==</span> <span class="mi">0</span> <span class="n">and</span> <span class="n">nums2_len</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">raise</span> <span class="no">ValueError</span><span class="p">(</span><span class="s2">"Both arrays are empty."</span><span class="p">)</span>
    <span class="c1"># Case 3. nums1 和 nums2 均不为空</span>
    <span class="ss">else:
        </span><span class="n">num</span> <span class="o">=</span> <span class="n">index</span> <span class="k">if</span> <span class="n">type</span><span class="p">(</span><span class="n">index</span><span class="p">)</span> <span class="n">is</span> <span class="n">int</span> <span class="k">else</span> <span class="n">index</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
        <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span>
        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">range</span><span class="p">(</span><span class="n">num</span><span class="p">):</span>
            <span class="n">num1</span> <span class="o">=</span> <span class="n">nums1</span><span class="p">[</span><span class="n">a</span><span class="p">]</span>
            <span class="n">num2</span> <span class="o">=</span> <span class="n">nums2</span><span class="p">[</span><span class="n">b</span><span class="p">]</span>
            <span class="c1"># 分情况讨论：num1 &lt; num2 和 num1 &gt; num2，这两种情况时对称的，解决一个另外一个也就解决了</span>
            <span class="k">if</span> <span class="n">num1</span> <span class="o">&lt;</span> <span class="ss">num2:
                </span><span class="n">a</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="c1"># 讨论：当某一个数组的索引超过其最大限度但还未停止寻找</span>
                <span class="k">if</span> <span class="n">a</span> <span class="o">&gt;=</span> <span class="n">nums1_len</span> <span class="n">and</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
                    <span class="k">if</span> <span class="n">type</span><span class="p">(</span><span class="n">index</span><span class="p">)</span> <span class="n">is</span> <span class="ss">int:
                        </span><span class="n">r</span> <span class="o">=</span> <span class="n">nums2</span><span class="p">[</span><span class="n">b</span> <span class="o">+</span> <span class="n">num</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
                        <span class="k">break</span>
                    <span class="ss">else:
                        </span><span class="n">r</span> <span class="o">=</span> <span class="n">float</span><span class="p">((</span><span class="n">nums2</span><span class="p">[</span><span class="n">b</span> <span class="o">+</span> <span class="n">num</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">nums2</span><span class="p">[</span><span class="n">b</span> <span class="o">+</span> <span class="n">num</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">2</span><span class="p">])</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
                        <span class="k">break</span>
                <span class="c1"># 讨论：当某一个数组的索引超过其最大限度但已到达停止寻找的条件</span>
                <span class="n">elif</span> <span class="n">a</span> <span class="o">&gt;=</span> <span class="n">nums1_len</span> <span class="n">and</span> <span class="n">i</span> <span class="o">==</span> <span class="n">num</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
                    <span class="k">if</span> <span class="n">type</span><span class="p">(</span><span class="n">index</span><span class="p">)</span> <span class="n">is</span> <span class="ss">int:
                        </span><span class="n">r</span> <span class="o">=</span> <span class="n">float</span><span class="p">(</span><span class="n">max</span><span class="p">(</span><span class="n">num1</span><span class="p">,</span> <span class="n">num2</span><span class="p">))</span>
                        <span class="k">break</span>
                    <span class="ss">else:
                        </span><span class="n">r</span> <span class="o">=</span> <span class="n">float</span><span class="p">((</span><span class="n">num1</span> <span class="o">+</span> <span class="n">num2</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
                        <span class="k">break</span>
                <span class="c1"># 讨论：当某一个数组的索引未超过其最大限度但已到达停止寻找的条件</span>
                <span class="n">elif</span> <span class="n">i</span> <span class="o">==</span> <span class="n">num</span> <span class="o">-</span> <span class="mi">1</span> <span class="n">and</span> <span class="n">a</span> <span class="o">&lt;</span> <span class="ss">nums1_len:
                    </span><span class="n">f_num1</span> <span class="o">=</span> <span class="n">nums1</span><span class="p">[</span><span class="n">a</span><span class="p">]</span>
                    <span class="n">num2</span> <span class="o">=</span> <span class="n">num2</span> <span class="k">if</span> <span class="n">f_num1</span> <span class="o">&gt;</span> <span class="n">num2</span> <span class="k">else</span> <span class="n">f_num1</span>
            <span class="ss">else:
                </span><span class="n">b</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="k">if</span> <span class="n">b</span> <span class="o">&gt;=</span> <span class="n">nums2_len</span> <span class="n">and</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
                    <span class="k">if</span> <span class="n">type</span><span class="p">(</span><span class="n">index</span><span class="p">)</span> <span class="n">is</span> <span class="ss">int:
                        </span><span class="n">r</span> <span class="o">=</span> <span class="n">nums1</span><span class="p">[</span><span class="n">a</span> <span class="o">+</span> <span class="n">num</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
                        <span class="k">break</span>
                    <span class="ss">else:
                        </span><span class="n">r</span> <span class="o">=</span> <span class="n">float</span><span class="p">((</span><span class="n">nums1</span><span class="p">[</span><span class="n">a</span> <span class="o">+</span> <span class="n">num</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">nums1</span><span class="p">[</span><span class="n">a</span> <span class="o">+</span> <span class="n">num</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">2</span><span class="p">])</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
                        <span class="k">break</span>
                <span class="n">elif</span> <span class="n">b</span> <span class="o">&gt;=</span> <span class="n">nums2_len</span> <span class="n">and</span> <span class="n">i</span> <span class="o">==</span> <span class="n">num</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
                    <span class="k">if</span> <span class="n">type</span><span class="p">(</span><span class="n">index</span><span class="p">)</span> <span class="n">is</span> <span class="ss">int:
                        </span><span class="n">r</span> <span class="o">=</span> <span class="n">float</span><span class="p">(</span><span class="n">max</span><span class="p">(</span><span class="n">num1</span><span class="p">,</span> <span class="n">num2</span><span class="p">))</span>
                        <span class="k">break</span>
                    <span class="ss">else:
                        </span><span class="n">r</span> <span class="o">=</span> <span class="n">float</span><span class="p">((</span><span class="n">num1</span> <span class="o">+</span> <span class="n">num2</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
                        <span class="k">break</span>
                <span class="n">elif</span> <span class="n">i</span> <span class="o">==</span> <span class="n">num</span> <span class="o">-</span> <span class="mi">1</span> <span class="n">and</span> <span class="n">b</span> <span class="o">&lt;</span> <span class="ss">nums2_len:
                    </span><span class="n">f_num2</span> <span class="o">=</span> <span class="n">nums2</span><span class="p">[</span><span class="n">b</span><span class="p">]</span>
                    <span class="n">num1</span> <span class="o">=</span> <span class="n">num1</span> <span class="k">if</span> <span class="n">f_num2</span> <span class="o">&gt;</span> <span class="n">num1</span> <span class="k">else</span> <span class="n">f_num2</span>
            <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="n">num</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">type</span><span class="p">(</span><span class="n">index</span><span class="p">)</span> <span class="n">is</span> <span class="ss">int:
                    </span><span class="n">r</span> <span class="o">=</span> <span class="n">float</span><span class="p">(</span><span class="n">max</span><span class="p">(</span><span class="n">num1</span><span class="p">,</span> <span class="n">num2</span><span class="p">))</span>
                <span class="ss">else:
                    </span><span class="n">r</span> <span class="o">=</span> <span class="n">float</span><span class="p">((</span><span class="n">num1</span> <span class="o">+</span> <span class="n">num2</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">r</span>
</code></pre></div></div>
:ET